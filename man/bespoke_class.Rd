% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bespoke_class-fit.R
\name{bespoke_class}
\alias{bespoke_class}
\alias{bespoke_class.default}
\alias{bespoke_class.data.frame}
\alias{bespoke_class.matrix}
\alias{bespoke_class.formula}
\alias{bespoke_class.recipe}
\title{Fit a \code{bespoke_class}}
\usage{
bespoke_class(x, ...)

\method{bespoke_class}{default}(x, ...)

\method{bespoke_class}{data.frame}(x, y, ...)

\method{bespoke_class}{matrix}(x, y, ...)

\method{bespoke_class}{formula}(formula, data, ...)

\method{bespoke_class}{recipe}(x, data, ...)
}
\arguments{
\item{x}{Depending on the context:
\itemize{
\item A \strong{data frame} of predictors.
\item A \strong{matrix} of predictors.
\item A \strong{recipe} specifying a set of preprocessing steps
created from \code{\link[recipes:recipe]{recipes::recipe()}}.
}}

\item{...}{Not currently used, but required for extensibility.}

\item{y}{When \code{x} is a \strong{data frame} or \strong{matrix}, \code{y} is the outcome
specified as:
\itemize{
\item A \strong{data frame} with 1 numeric column.
\item A \strong{matrix} with 1 numeric column.
\item A numeric \strong{vector}.
}}

\item{formula}{A formula specifying the outcome terms on the left-hand side,
and the predictor terms on the right-hand side.}

\item{data}{When a \strong{recipe} or \strong{formula} is used, \code{data} is specified as:
\itemize{
\item A \strong{data frame} containing both the predictors and the outcome.
}}
}
\value{
A \code{bespoke_class} object.
}
\description{
\code{bespoke_class()} fits a model.
}
\examples{
predictors <- mtcars[, -1]
outcome <- mtcars[, 1]

# XY interface
mod <- bespoke_class(predictors, outcome)

# Formula interface
mod2 <- bespoke_class(mpg ~ ., mtcars)

# Recipes interface
library(recipes)
rec <- recipe(mpg ~ ., mtcars)
rec <- step_log(rec, disp)
mod3 <- bespoke_class(rec, mtcars)

}
